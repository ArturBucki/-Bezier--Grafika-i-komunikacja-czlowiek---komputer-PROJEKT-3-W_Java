
import javax.swing.SwingUtilities;
import javax.swing.JFrame;
import javax.swing.JPanel;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;


public class Bezier
{
   
    public static void main(String[] args)
    {
        SwingUtilities.invokeLater(new Runnable()
        {
            public void run()
            {
                createAndShowGUI(); 
            }
        });
    }
    private static void createAndShowGUI()
    {
        JFrame f = new JFrame("Bezier");
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.add(new MyPanel());
        f.pack();
        f.setVisible(true);
    }
}

class MyPanel extends JPanel
{
    
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@Override
    public Dimension getPreferredSize()
    {
    	setValues();
        return new Dimension(500,500);
    }
    
    double x[][] = new double[13][4];
    double y[][] = new double[13][4];
    double putx;
    double puty;
    
    double x2[][] = new double[22][4];
    double y2[][] = new double[22][4];
    double putx2;
    double puty2;
    
    public void setValues()
    {
    	x[0][0] = 68;
    	y[0][0] = 420; 
    	x[0][1] = 67;
    	y[0][1] = 420;
    	x[0][2] = 92;
    	y[0][2] = 420;
    	x[0][3] = 106;
    	y[0][3] = 420;
    	
    	
    	x[1][0] = 106;
    	y[1][0] = 420;
    	x[1][1] = 107;
    	y[1][1] = 420;
    	x[1][2] = 136;
    	y[1][2] = 360;
    	x[1][3] = 132;
    	y[1][3] = 362;
    	  
    	x[2][0] = 132;
    	y[2][0] = 362;
    	x[2][1] = 130;
    	y[2][1] = 363;
    	x[2][2] = 205;
    	y[2][2] = 361;
    	x[2][3] = 205;
    	y[2][3] = 361;
    	
    	x[3][0] = 205;
    	y[3][0] = 361;
    	x[3][1] = 205;
    	y[3][1] = 346;
    	x[3][2] = 229;
    	y[3][2] = 426;
    	x[3][3] = 228;
    	y[3][3] = 425;
    	  
    	x[4][0] = 228;
    	y[4][0] = 425;
    	x[4][1] = 226;
    	y[4][1] = 423;
    	x[4][2] = 265;
    	y[4][2] = 423;
    	x[4][3] = 265;
    	y[4][3] = 424;
    	  
    	x[5][0] = 265;
    	y[5][0] = 424;
    	x[5][1] = 264;
    	y[5][1] = 426;
    	x[5][2] = 175;
    	y[5][2] = 144;
    	x[5][3] = 169;
    	y[5][3] = 144;
    	  
    	x[6][0] = 169;
    	y[6][0] = 144;
    	x[6][1] = 156;
    	y[6][1] = 143;
    	x[6][2] = 82;
    	y[6][2] = 420;
    	x[6][3] = 67;
    	y[6][3] = 420;
    	  
    	x[7][0] = 67;
    	y[7][0] = 420;
    	x[7][1] = 66;
    	y[7][1] = 420;
    	x[7][2] = 82;
    	y[7][2] = 420;
    	x[7][3] = 104;
    	y[7][3] = 420;
    	  
        x[8][0] = 104;
    	y[8][0] = 420;
    	x[8][1] = 108;
    	y[8][1] = 420;
    	x[8][2] = 134;
    	y[8][2] = 355;
    	x[8][3] = 134;
    	y[8][3] = 361;
    	  
    	x[9][0] = 134;
    	y[9][0] = 361;
    	x[9][1] = 134;
    	y[9][1] = 363;
    	x[9][2] = 163;
    	y[9][2] = 206;
    	x[9][3] = 168;
    	y[9][3] = 206;
    	  
    	x[10][0] = 168;
    	y[10][0] = 206;
    	x[10][1] = 170;
    	y[10][1] = 206;
    	x[10][2] = 204;
    	y[10][2] = 361;
    	x[10][3] = 204;
    	y[10][3] = 359;
    	
    	x[11][0] = 204;
    	y[11][0] = 359;
    	x[11][1] = 204;
    	y[11][1] = 341;
    	x[11][2] = 200;
    	y[11][2] = 338;
    	x[11][3] = 201;
    	y[11][3] = 338;
    	
    	x[12][0] = 201;
    	y[12][0] = 338;
    	x[12][1] = 202;
    	y[12][1] = 338;
    	x[12][2] = 139;
    	y[12][2] = 340;
    	x[12][3] = 137;
    	y[12][3] = 339;
    	
    	
    	x2[0][0] = 271;
    	y2[0][0] = 73;
    	x2[0][1] = 287;
    	y2[0][1] = 65;
    	x2[0][2] = 377;
    	y2[0][2] = 57;
    	x2[0][3] = 390;
    	y2[0][3] = 59;
    	
    	x2[1][0] = 390;
    	y2[1][0] = 59;
    	x2[1][1] = 417;
    	y2[1][1] = 64;
    	x2[1][2] = 519;
    	y2[1][2] = 37;
    	x2[1][3] = 515;
    	y2[1][3] = 146;
    	
    	x2[2][0] = 515;
    	y2[2][0] = 146;
    	x2[2][1] = 512;
    	y2[2][1] = 225;
    	x2[2][2] = 427;
    	y2[2][2] = 224;
    	x2[2][3] = 415;
    	y2[2][3] = 224;
    	
    	x2[3][0] = 415;
    	y2[3][0] = 224;
    	x2[3][1] = 376;
    	y2[3][1] = 224;
    	x2[3][2] = 516;
    	y2[3][2] = 217;
    	x2[3][3] = 516;
    	y2[3][3] = 301;
    	
    	x2[4][0] = 516;
    	y2[4][0] = 301;
    	x2[4][1] = 516;
    	y2[4][1] = 394;
    	x2[4][2] = 450;
    	y2[4][2] = 408;
    	x2[4][3] = 435;
    	y2[4][3] = 406;
    	
    	x2[5][0] = 435;
    	y2[5][0] = 406;
    	x2[5][1] = 420;
    	y2[5][1] = 404;
    	x2[5][2] = 272;
    	y2[5][2] = 407;
    	x2[5][3] = 257;
    	y2[5][3] = 406;
    	
    	x2[6][0] = 257;
    	y2[6][0] = 406;
    	x2[6][1] = 208;
    	y2[6][1] = 404;
    	x2[6][2] = 202;
    	y2[6][2] = 389;
    	x2[6][3] = 227;
    	y2[6][3] = 388;
    	
    	x2[7][0] = 227;
    	y2[7][0] = 388;
    	x2[7][1] = 249;
    	y2[7][1] = 387;
    	x2[7][2] = 274;
    	y2[7][2] = 385;
    	x2[7][3] = 274;
    	y2[7][3] = 381;
    	
    	x2[8][0] = 274;
    	y2[8][0] = 381;
    	x2[8][1] = 274;
    	y2[8][1] = 366;
    	x2[8][2] = 279;
    	y2[8][2] = 136;
    	x2[8][3] = 275;
    	y2[8][3] = 115;
 
    	x2[9][0] = 275;
    	y2[9][0] = 115;
    	x2[9][1] = 272;
    	y2[9][1] = 100;
    	x2[9][2] = 237;
    	y2[9][2] = 105;
    	x2[9][3] = 222;
    	y2[9][3] = 102;
    	
    	x2[10][0] = 222;
    	y2[10][0] = 102;
    	x2[10][1] = 194;
    	y2[10][1] = 96;
    	x2[10][2] = 216;
    	y2[10][2] = 74;
    	x2[10][3] = 231;
    	y2[10][3] = 77;
 
    	x2[11][0] = 231;
    	y2[11][0] = 77;
    	x2[11][1] = 246;
    	y2[11][1] = 80;
    	x2[11][2] = 293;
    	y2[11][2] = 81;
    	x2[11][3] = 263;
    	y2[11][3] = 74;
    	
    	x2[12][0] = 263;
    	y2[12][0] = 74;
    	x2[12][1] = 248;
    	y2[12][1] = 71;
    	x2[12][2] = 329;
    	y2[12][2] = 75;
    	x2[12][3] = 319;
    	y2[12][3] = 87;
    	
    	x2[13][0] = 319;
    	y2[13][0] = 87;
    	x2[13][1] = 314;
    	y2[13][1] = 93;
    	x2[13][2] = 317;
    	y2[13][2] = 186;
    	x2[13][3] = 320;
    	y2[13][3] = 198;
    	
    	x2[14][0] = 320;
    	y2[14][0] = 198;
    	x2[14][1] = 324;
    	y2[14][1] = 213;
    	x2[14][2] = 456;
    	y2[14][2] = 217;
    	x2[14][3] = 454;
    	y2[14][3] = 147;
    	
    	x2[15][0] = 454;
    	y2[15][0] = 147;
    	x2[15][1] = 452;
    	y2[15][1] = 80;
    	x2[15][2] = 322;
    	y2[15][2] = 98;
    	x2[15][3] = 320;
    	y2[15][3] = 83;
 
    	x2[16][0] = 320;
    	y2[16][0] = 83;
    	x2[16][1] = 318;
    	y2[16][1] = 68;
    	x2[16][2] = 314;
    	y2[16][2] = 287;
    	x2[16][3] = 317;
    	y2[16][3] = 271;
    	
    	x2[17][0] = 317;
    	y2[17][0] = 271;
    	x2[17][1] = 320;
    	y2[17][1] = 256;
    	x2[17][2] = 425;
    	y2[17][2] = 254;
    	x2[17][3] = 438;
    	y2[17][3] = 261;
    	
    	x2[18][0] = 438;
    	y2[18][0] = 261;
    	x2[18][1] = 472;
    	y2[18][1] = 279;
    	x2[18][2] = 477;
    	y2[18][2] = 313;
    	x2[18][3] = 466;
    	y2[18][3] = 348;
    	
    	x2[19][0] = 466;
    	y2[19][0] = 348;
    	x2[19][1] = 460;
    	y2[19][1] = 367;
    	x2[19][2] = 396;
    	y2[19][2] = 383;
    	x2[19][3] = 371;
    	y2[19][3] = 381;
    	
    	x2[20][0] = 371;
    	y2[20][0] = 381;
    	x2[20][1] = 356;
    	y2[20][1] = 380;
    	x2[20][2] = 333;
    	y2[20][2] = 380;
    	x2[20][3] = 318;
    	y2[20][3] = 358;
    	
    	x2[21][0] = 318;
    	y2[21][0] = 358;
    	x2[21][1] = 310;
    	y2[21][1] = 346;
    	x2[21][2] = 305;
    	y2[21][2] = 290;
    	x2[21][3] = 319;
    	y2[21][3] = 275;
    }
    

    public void paintComponent(Graphics g)
    {
        super.paintComponent(g);         
        Graphics2D g2d = (Graphics2D) g; 
        g2d.setColor(Color.black);
        for(int i=0; i<13; i++)
        {
        	for(double t = 0.0; t<=1.0; t=t+0.001)
            {
            	putx = Math.pow(1-t, 3)*x[i][0] + 3*t*Math.pow(1-t, 2)*x[i][1] + 3*t*t*Math.pow(1-t, 1)*x[i][2] + Math.pow(t, 3) * x[i][3];
            	puty = Math.pow(1-t, 3)*y[i][0] + 3*t*Math.pow(1-t, 2)*y[i][1] + 3*t*t*Math.pow(1-t, 1)*y[i][2] + Math.pow(t, 3) * y[i][3];
            	
            	g2d.drawLine((int)putx, (int)puty, (int)putx, (int)puty);
            }
        }
        
        for(int i=0; i<22; i++)
        {
        	for(double t = 0.0; t<=1.0; t=t+0.001)
            {
            	putx2 = Math.pow(1-t, 3)*x2[i][0] + 3*t*Math.pow(1-t, 2)*x2[i][1] + 3*t*t*Math.pow(1-t, 1)*x2[i][2] + Math.pow(t, 3) * x2[i][3];
            	puty2 = Math.pow(1-t, 3)*y2[i][0] + 3*t*Math.pow(1-t, 2)*y2[i][1] + 3*t*t*Math.pow(1-t, 1)*y2[i][2] + Math.pow(t, 3) * y2[i][3];
            	
            	g2d.drawLine((int)putx2, (int)puty2, (int)putx2, (int)puty2);
            }
        }
        
        g2d.dispose();
        
    }  

}
